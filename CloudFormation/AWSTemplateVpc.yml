AWSTemplateFormatVersion: "2010-09-09"
Description: Create VPC, Subnet, IGW, NAT

# ------------------------------------------------------------#
#   Parameters
# ------------------------------------------------------------#
Parameters:
  VpcCIDR:
    Type: String
    Default: 10.99.0.0/16

  PublicSubnetFrontACIDR:
    Type: String
    Default: 10.99.10.0/24
  PublicSubnetFrontCCIDR:
    Type: String
    Default: 10.99.11.0/24

  PrivateSubnetAppACIDR:
    Type: String
    Default: 10.99.20.0/24
  PrivateSubnetAppCCIDR:
    Type: String
    Default: 10.99.21.0/24

  PrivateSubnetDataACIDR:
    Type: String
    Default: 10.99.20.0/24
  PrivateSubnetDataCCIDR:
    Type: String
    Default: 10.99.21.0/24

# ------------------------------------------------------------#
#   Resources
# ------------------------------------------------------------#
Resources:
  # ------------------------------------------------------------#
  #   VPC
  # ------------------------------------------------------------#
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: igw
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  # ------------------------------------------------------------#
  #   Subnet
  # ------------------------------------------------------------#
  PublicSubnetFrontA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetFrontACIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: front-subnet-a
  PublicSubnetFrontC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetFrontCCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: front-subnet-c

  PrivateSubnetAppA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppACIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: app-subnet-a
  PrivateSubnetAppC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppCCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: app-subnet-c

  PrivateSubnetDataA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppACIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: data-subnet-a
  PrivateSubnetDataC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppCCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: data-subnet-c

  # ------------------------------------------------------------#
  #  RouteTable
  # ------------------------------------------------------------#
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: pub-rt
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetFrontARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetFrontA
  PublicSubnetFrontCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetFrontC

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: pri-rt
  PrivateSubnetAppARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetAppA
  PrivateSubnetAppCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetAppC
  PrivateSubnetDataARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetDataA
  PrivateSubnetDataCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetDataC

  # ------------------------------------------------------------#
  #   NAT
  # ------------------------------------------------------------#
  NatGatewayPublicA:
    Type: AWS::EC2::NatGateway
    DependsOn: NatGatewayPublicAEIP
    Properties:
      AllocationId: !GetAtt NatGatewayPublicAEIP.AllocationId
      SubnetId: !Ref PublicSubnetFrontA
      Tags:
        - Key: Name
          Value: nat
  NatGatewayPublicAEIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: nat-eip
  NatGatewayPrivateRoute:
    Type: AWS::EC2::Route
    DependsOn: NatGatewayPublicA
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayPublicA

# ------------------------------------------------------------#
#   Output
# ------------------------------------------------------------#
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: vpc
  VpcCIDR:
    Value: !Ref VpcCIDR
    Export:
      Name: !Sub vpc-cidr

  PublicSubnetFrontA:
    Value: !Ref PublicSubnetFrontA
    Export:
      Name: front-subnet-a
  PublicSubnetFrontACIDR:
    Value: !Ref PublicSubnetFrontACIDR
    Export:
      Name: front-subnet-a-cidr
  PublicSubnetFrontC:
    Value: !Ref PublicSubnetFrontC
    Export:
      Name: front-subnet-c
  PublicSubnetFrontCCIDR:
    Value: !Ref PublicSubnetFrontCCIDR
    Export:
      Name: front-subnet-c-cidr

  PrivateSubnetAppA:
    Value: !Ref PrivateSubnetAppA
    Export:
      Name: app-subnet-a
  PrivateSubnetAppACIDR:
    Value: !Ref PrivateSubnetAppACIDR
    Export:
      Name: app-subnet-a-cidr
  PrivateSubnetAppC:
    Value: !Ref PrivateSubnetAppC
    Export:
      Name: app-subnet-c
  PrivateSubnetAppCCIDR:
    Value: !Ref PrivateSubnetAppCCIDR
    Export:
      Name: app-subnet-c-cidr

  PrivateSubnetDataA:
    Value: !Ref PrivateSubnetDataA
    Export:
      Name: data-subnet-a
  PrivateSubnetDataACIDR:
    Value: !Ref PrivateSubnetDataACIDR
    Export:
      Name: data-subnet-a-cidr
  PrivateSubnetDataC:
    Value: !Ref PrivateSubnetDataC
    Export:
      Name: data-subnet-c
  PrivateSubnetDataCCIDR:
    Value: !Ref PrivateSubnetDataCCIDR
    Export:
      Name: data-subnet-c-cidr

  PublicRouteTable:
    Value: !Ref PublicRouteTable
    Export:
      Name: pub-rt
  PrivateRouteTable:
    Value: !Ref PrivateRouteTable
    Export:
      Name: pri-rt

  NatGatewayPublicAEIP:
    Value: !Ref NatGatewayPublicAEIP
    Export:
      Name: nat-a-eip
