AWSTemplateFormatVersion: "2010-09-09"
Description: Create VPC, Subnet, IGW, NAT

# ------------------------------------------------------------#
#   Parameters
# ------------------------------------------------------------#
Parameters:
  ServicePrefix:
    Type: String
    Default: "example"
  EnvPrefix:
    Type: String
    Default: "dev"
    AllowedValues:
      - "dev"
      - "stg"
      - "prd"
  VpcCIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"
  PublicSubnetFrontACIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"
  PublicSubnetFrontCCIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"
  PrivateSubnetAppACIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"
  PrivateSubnetAppCCIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"
  PrivateSubnetDataACIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"
  PrivateSubnetDataCCIDR:
    Type: String
    Default: "10.18.0.0/16"
    AllowedValues:
      - "10.18.0.0/16"
      - "10.17.0.0/16"
      - "10.16.0.0/16"

# ------------------------------------------------------------#
#   Resources
# ------------------------------------------------------------#
Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      InstanceTenancy: default
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-vpc"

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-igw"
  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnetFrontA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetFrontACIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-front-subnet-a"
  PublicSubnetFrontC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PublicSubnetFrontCCIDR
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-front-subnet-c"

  PrivateSubnetAppA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppACIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-app-subnet-a"
  PrivateSubnetAppC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppCCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-app-subnet-c"

  PrivateSubnetDataA:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [0, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppACIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-data-subnet-a"
  PrivateSubnetDataC:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: !Select [1, !GetAZs ""]
      CidrBlock: !Ref PrivateSubnetAppCCIDR
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-data-subnet-c"

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-pub-rt"
  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  PublicSubnetFrontARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetFrontA
  PublicSubnetFrontCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnetFrontC

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub "${ServicePrefix}-${EnvPrefix}-pri-rt"
  PrivateSubnetAppARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetAppA
  PrivateSubnetAppCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetAppC
  PrivateSubnetDataARouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetDataA
  PrivateSubnetDataCRouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      SubnetId: !Ref PrivateSubnetDataC

  # NatGatewayPublicA:
  #   Type: AWS::EC2::NatGateway
  #   DependsOn: NatGatewayPublicAEIP
  #   Properties:
  #     AllocationId: !GetAtt NatGatewayPublicAEIP.AllocationId
  #     SubnetId: !Ref PublicSubnetFrontA
  #     Tags:
  #       - Key: Name
  #         Value: !Sub "${ServicePrefix}-${EnvPrefix}-nat"
  # NatGatewayPublicAEIP:
  #   Type: AWS::EC2::EIP
  #   Properties:
  #     Domain: vpc
  #     Tags:
  #       - Key: Name
  #         Value: !Sub "${ServicePrefix}-${EnvPrefix}-nat-eip"
  # NatGatewayPrivateRoute:
  #   Type: AWS::EC2::Route
  #   DependsOn: NatGatewayPublicA
  #   Properties:
  #     RouteTableId: !Ref PrivateRouteTable
  #     DestinationCidrBlock: 0.0.0.0/0
  #     NatGatewayId: !Ref NatGatewayPublicA

# ------------------------------------------------------------#
#   Outputs
# ------------------------------------------------------------#
Outputs:
  VPC:
    Value: !Ref VPC
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-vpc"
  VpcCIDR:
    Value: !Ref VpcCIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-vpc-cidr"

  PublicSubnetFrontA:
    Value: !Ref PublicSubnetFrontA
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-front-subnet-a"
  PublicSubnetFrontACIDR:
    Value: !Ref PublicSubnetFrontACIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-front-subnet-a-cidr"
  PublicSubnetFrontC:
    Value: !Ref PublicSubnetFrontC
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-front-subnet-c"
  PublicSubnetFrontCCIDR:
    Value: !Ref PublicSubnetFrontCCIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-front-subnet-c-cidr"

  PrivateSubnetAppA:
    Value: !Ref PrivateSubnetAppA
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-app-subnet-a"
  PrivateSubnetAppACIDR:
    Value: !Ref PrivateSubnetAppACIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-app-subnet-a-cidr"
  PrivateSubnetAppC:
    Value: !Ref PrivateSubnetAppC
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-app-subnet-c"
  PrivateSubnetAppCCIDR:
    Value: !Ref PrivateSubnetAppCCIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-app-subnet-c-cidr"

  PrivateSubnetDataA:
    Value: !Ref PrivateSubnetDataA
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-data-subnet-a"
  PrivateSubnetDataACIDR:
    Value: !Ref PrivateSubnetDataACIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-data-subnet-a-cidr"
  PrivateSubnetDataC:
    Value: !Ref PrivateSubnetDataC
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-data-subnet-c"
  PrivateSubnetDataCCIDR:
    Value: !Ref PrivateSubnetDataCCIDR
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-data-subnet-c-cidr"

  PublicRouteTable:
    Value: !Ref PublicRouteTable
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-pub-rt"
  PrivateRouteTable:
    Value: !Ref PrivateRouteTable
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-pri-rt"

  NatGatewayPublicAEIP:
    Value: !Ref NatGatewayPublicAEIP
    Export:
      Name: !Sub "${ServicePrefix}-${EnvPrefix}-nat-a-eip"
